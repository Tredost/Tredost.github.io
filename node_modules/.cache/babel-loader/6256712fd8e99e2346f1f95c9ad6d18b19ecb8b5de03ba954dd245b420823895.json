{"ast":null,"code":"var _jsxFileName = \"/home/tredost/Desktop/Projeto_Front-End_Nimbus/projeto_cronos/src/components/grafico/Grafico.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS } from 'chart.js/auto';\nimport { CopaData } from \"./DataCopacabana\";\nimport { TijuData } from \"./DataTijuca\";\nimport { ReBaData } from \"./DataRecreio\";\nimport { JdOcData } from \"./DataJdOceanico\";\nimport \"./grafico.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grafico = ({\n  selectedDataset\n}) => {\n  _s();\n  const [copaData] = useState({\n    labels: CopaData.map(data => data.year),\n    datasets: [{\n      label: \"Users Gained\",\n      data: CopaData.map(data => data.userGain),\n      backgroundColor: [\"#EFAD4C\"]\n    }]\n  });\n  const [jdocData] = useState({\n    labels: JdOcData.map(data => data.year),\n    datasets: [{\n      label: \"Users Gained\",\n      data: JdOcData.map(data => data.userGain)\n    }]\n  });\n  const [tijuData] = useState({\n    labels: TijuData.map(data => data.year),\n    datasets: [{\n      label: \"Users Gained\",\n      data: TijuData.map(data => data.userGain)\n    }]\n  });\n  const [rebaData] = useState({\n    labels: ReBaData.map(data => data.year),\n    datasets: [{\n      label: \"Users Gained\",\n      data: ReBaData.map(data => data.userGain)\n    }]\n  });\n  const getChartData = () => {\n    switch (selectedDataset) {\n      case 'Copacabana':\n        return copaData;\n      case 'Jardim Oceânico':\n        return jdocData;\n      case 'Tijuca':\n        return tijuData;\n      case 'Recreio dos Bandeirantes':\n        return rebaData;\n      default:\n        return copaData;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"grafico\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: getChartData()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Grafico, \"U3z3/KWHSUrkcm3n3lTvexnZaOM=\");\n_c = Grafico;\nexport default Grafico;\n\n/* const Grafico = () => {\n\n    const Copacabana = {\n      labels: CopaData.map((data) => data.year),\n      datasets: [\n        {\n          label: \"Users Gained\",\n          data: CopaData.map((data) => data.userGain),\n        },\n      ],\n    };\n\n    const JdOceanico = {\n      labels: JdOcData.map((data) => data.year),\n      datasets: [\n        {\n          label: \"Users Gained\",\n          data: JdOcData.map((data) => data.userGain),\n        },\n      ],\n    };\n\n    const Tijuca = {\n      labels: TijuData.map((data) => data.year),\n      datasets: [\n        {\n          label: \"Users Gained\",\n          data: TijuData.map((data) => data.userGain),\n        },\n      ],\n    };\n\n    const Recreio = {\n      labels: ReBaData.map((data) => data.year),\n      datasets: [\n        {\n          label: \"Users Gained\",\n          data: ReBaData.map((data) => data.userGain),\n        },\n      ],\n    };\n\n  const [copaData] = useState(Copacabana);\n  const [jdocData] = useState(JdOceanico);\n  const [tijuData] = useState(Tijuca);\n  const [rebaData] = useState(Recreio);\n\n    return (\n        <div id=\"grafico\">\n            <Bar data={copaData}/>\n        </div>\n    )\n  };\n\n\nexport default Grafico; */\nvar _c;\n$RefreshReg$(_c, \"Grafico\");","map":{"version":3,"names":["React","useState","Bar","Chart","ChartJS","CopaData","TijuData","ReBaData","JdOcData","jsxDEV","_jsxDEV","Grafico","selectedDataset","_s","copaData","labels","map","data","year","datasets","label","userGain","backgroundColor","jdocData","tijuData","rebaData","getChartData","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/tredost/Desktop/Projeto_Front-End_Nimbus/projeto_cronos/src/components/grafico/Grafico.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS } from 'chart.js/auto';\nimport { CopaData } from \"./DataCopacabana\";\nimport { TijuData } from \"./DataTijuca\";\nimport { ReBaData } from \"./DataRecreio\";\nimport { JdOcData } from \"./DataJdOceanico\";\nimport \"./grafico.css\";\n\n\nconst Grafico = ({ selectedDataset }) => {\n  const [copaData] = useState({\n    labels: CopaData.map((data) => data.year),\n    datasets: [\n      {\n        label: \"Users Gained\",\n        data: CopaData.map((data) => data.userGain),\n        backgroundColor: [\"#EFAD4C\"],\n      },\n    ],\n  });\n\n  const [jdocData] = useState({\n    labels: JdOcData.map((data) => data.year),\n    datasets: [\n      {\n        label: \"Users Gained\",\n        data: JdOcData.map((data) => data.userGain),\n      },\n    ],\n  });\n\n  const [tijuData] = useState({\n    labels: TijuData.map((data) => data.year),\n    datasets: [\n      {\n        label: \"Users Gained\",\n        data: TijuData.map((data) => data.userGain),\n      },\n    ],\n  });\n\n  const [rebaData] = useState({\n    labels: ReBaData.map((data) => data.year),\n    datasets: [\n      {\n        label: \"Users Gained\",\n        data: ReBaData.map((data) => data.userGain),\n      },\n    ],\n  });\n\n  const getChartData = () => {\n    switch (selectedDataset) {\n      case 'Copacabana':\n        return copaData;\n\n      case 'Jardim Oceânico':\n        return jdocData;\n\n      case 'Tijuca':\n        return tijuData;\n\n      case 'Recreio dos Bandeirantes':\n        return rebaData;\n\n      default:\n        return copaData;\n    }\n  };\n\n  return (\n    <div id=\"grafico\">\n      <Bar data={getChartData()} />\n    </div>\n  );\n};\n\nexport default Grafico;\n\n/* const Grafico = () => {\n\n    const Copacabana = {\n      labels: CopaData.map((data) => data.year),\n      datasets: [\n        {\n          label: \"Users Gained\",\n          data: CopaData.map((data) => data.userGain),\n        },\n      ],\n    };\n\n    const JdOceanico = {\n      labels: JdOcData.map((data) => data.year),\n      datasets: [\n        {\n          label: \"Users Gained\",\n          data: JdOcData.map((data) => data.userGain),\n        },\n      ],\n    };\n\n    const Tijuca = {\n      labels: TijuData.map((data) => data.year),\n      datasets: [\n        {\n          label: \"Users Gained\",\n          data: TijuData.map((data) => data.userGain),\n        },\n      ],\n    };\n\n    const Recreio = {\n      labels: ReBaData.map((data) => data.year),\n      datasets: [\n        {\n          label: \"Users Gained\",\n          data: ReBaData.map((data) => data.userGain),\n        },\n      ],\n    };\n\n  const [copaData] = useState(Copacabana);\n  const [jdocData] = useState(JdOceanico);\n  const [tijuData] = useState(Tijuca);\n  const [rebaData] = useState(Recreio);\n\n    return (\n        <div id=\"grafico\">\n            <Bar data={copaData}/>\n        </div>\n    )\n  };\n\n\nexport default Grafico; */"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}